<div class="content_wrapper auto-set-padding">
    <div itemscope itemtype="http://schema.org/Product">
      <meta itemprop="name" content="{{ product.title }}" />
      <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
      <meta itemprop="image" content="http:{{ product.featured_image.src | product_img_url: 'grande' | remove: 'http:' | remove: 'https:' }}" />
      {% for variant in product.variants %}
      <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="price" content="{{ variant.price | money_without_currency | strip_html }}" />
        <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
        {% if product.available %}
        <link itemprop="availability" href="http://schema.org/InStock" />
        {% else %}
        <link itemprop="availability" href="http://schema.org/OutOfStock" />
        {% endif %}
      </div>
      {% endfor %}

        {% capture tag_html %}
        {% if settings.prod_show_tags %}
        {% for tag in product.tags %}
            {% unless tag contains 'meta-' %}
      		<li><a href="{% if collection %}{{ collection.url }}{% else %}/collections/all{% endif %}/{{ tag | handle }}">{{ tag }}</a></li>
            {% endunless %}
        {% endfor %}
        {% endif %}
        {% endcapture %}



        {% if tag_html contains 'a' %}
            <div class="tags nav-row spaced-row hidden">
                <ul>{{ tag_html }}</ul>
            </div>
        {% endif %}

        {% comment %}
            GALLERY, TITLE, DESCRIPTION IS ALL IN product-detail.liquid
            It is included here on the product page, and also used in the slide-down feature on the collection page
        {% endcomment %}
        <div id="main-product-detail" class="product-detail spaced-row container cf">
            {% assign product_detail_in_block = false %}
            {% include 'product-detail' with product %}
        </div><!-- /.product-detail -->

      <div class="poduct-other-img hide-till-tab">
        {% if product.images.size > 1 %}
        {% for image in product.images %}
        {% if forloop.first %}
        {% else %}
        {% assign a = forloop.index | modulo: 2 %}

        <div class="img-list {% if a == 0 %}second{% else %}first{% endif %}">
          <div>
            <a class="fancy" href="{{ image | product_img_url: 'master' }}" rel="gallery">
              <img src="{{ image | product_img_url: 'master' }}" alt="{{ image.alt | escape }}"/>
            </a>
          </div>
        </div>
        {% endif %}

        {% endfor %}
        {% endif %}
        <div style="clear:both;"></div>
      </div>

        {% assign show_related = false %}
        {% capture related_markup %}
        <div id="related-products" class="cf">
            <h4 class="align-centre">{{ settings.text_rel_title }}</h4>

            <div class="collection-listing related-{{ settings.prod_rel_meth }} cf row-spacing">
                {% if settings.prod_rel_meth == 'collection' %}
                    {% assign product_collection = collection %}
              		{% unless product_collection %}{% assign need_new_collection = true %}{% else %}{% assign need_new_collection = false %}{% endunless %}
                    {% if need_new_collection or product_collection.handle == 'all' or product_collection.handle contains 'frontpage' %}
                        {% for coll in product.collections %}
                            {% unless coll.handle == 'all' or coll.handle contains 'frontpage' %}
              					{% assign product_collection = coll %}
                            {% endunless %}
                        {% endfor %}
                    {% endif %}
                    {% assign product_image_size_norm = true %}
                    {% assign prod_rel_count = 0 %}
                    {% assign prod_rel_limit_int = settings.prod_rel_limit | plus: 0 %}
                    {% assign prod_rel_limit_plus_one = prod_rel_limit_int | plus: 1 %}

                        {% for relprod in product_collection.products %}
              				{% if relprod.available %}
                            {% if relprod.handle != product.handle and prod_rel_limit_int > prod_rel_count %}
                                {% assign prod_rel_count = prod_rel_count | plus: 1 %}
                                {% assign show_related = true %}
                                {% include 'product-block' with relprod %}
                            {% endif %}
              				{% endif %}
                        {% endfor %}

                {% elsif settings.prod_rel_meth == 'tag-coll' %}
              		{% assign c = 0 %}
                    {% for tag in product.tags %}
                            {% paginate collections.all.products by 150 %}
                                {% for relprod in collections.all.products %}
                                    {% if relprod.handle != product.handle and relprod.tags contains tag %}
              							{% assign c = c | plus : 1 %}
                                        {% assign show_related = true %}
              							{% if c < 5 %}
                                        	{% include 'product-block' with relprod %}
              							{% endif %}
                                    {% endif %}
                                {% endfor %}
                            {% endpaginate %}
                    {% endfor %}
                {% elsif settings.prod_rel_meth == 'tag-handle' %}
                    {% for tag in product.tags %}
                        {% if tag contains 'meta-related-product-' %}{% assign show_related = true %}{% endif %}
                    {% endfor %}
                    {% assign is_tag_related_product = true %}
                    <script id="product-block-template" type="text/template">
                        {% include 'product-block' with relprod %}
                    </script>
                    <script>
                    //Load in related products via ajax
                    $(function(){
                        Shopify.money_format = {{ shop.money_format | json }};
                        var related_tags = {{ product.tags | json }};
                        var i;
                        var tags_count = 0;
                        for(i=0; i<related_tags.length; i++) {
                            if(related_tags[i].indexOf('meta-related-product-') >= 0) {
                                tags_count++;
                                if(tags_count > {{ settings.prod_rel_limit }}) {
                                    break;
                                }
                                var rel_handle = related_tags[i].substring('meta-related-product-'.length);
                                $.getJSON('/products/'+rel_handle+'.js', function(data) {
                                    //Add this data to the page
                                    window.productJSON.push(data);
                                    //Build template
                                    var $template = $($('#product-block-template').html());
                                    $template.find('.productlabel, .product-detail').remove();
                                    $template.find('a.more-info').attr({ href: data.url, title: data.title });
                                    $template.find('.image-cont img').attr('src', data.featured_image.replace(/(\.jpg|\.png|\.jpeg|\.gif)/, '_medium$1')).attr('alt', data.title);
                                    $template.find('.title').html(data.title);
                                    $template.find('.price').html(Shopify.formatMoney(data.price));
                                    if(data.price < data.compare_at_price_max) {
                                        var prevHTML = '<div class="reducedfrom"><span class="was">Was</span> <span class="amount">AMOUNT</span></div>';
                                        $template.find('.block-inner .price').before(prevHTML.replace('AMOUNT', Shopify.formatMoney(data.compare_at_price_max)));
                                    }
                                    //Show
                                    $template.appendTo('#related-products .collection-listing').imagesLoaded(function(){
                                        $template.find('.image-cont').animate({opacity: 1}, 200);
                                    });
                                });
                            }
                        }
                    });
                    </script>
                {% endif %}
            </div>
        </div><!-- /#related-products -->
        {% endcapture %}
        {% if show_related %}{{ related_markup }}{% endif %}
    </div><!-- /.product-page-layout -->
</div>




<div style="clear:both;"></div>
<!--
<script>
  $(document).ready(function(){
    $('.overlay-mianimg').click(function(){
      $('.flex-active-slide .fancy').trigger('click');
    });
  });
</script>
-->
